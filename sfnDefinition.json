{
    "Comment": "A description of my state machine",
    "StartAt": "Invoke Feature Flag",
    "States": {
        "Invoke Feature Flag": {
            "Type": "Task",
            "Resource": "FeatureFlag",
            "ResultPath": "$.ffOutput",
            "Parameters": {
                "body": {
                    "customerName.$": "$.customerName",
                    "featureFlagName": "enable_sast"
                },
                "headers": {
                    "Content-Type": "application/json",
                    "throw-error": true
                },
                "path": "/invoke/feature-flags/getFeatureFlag"
            },
            "Next": "Should Run Map"
        },
        "Should Run Map": {
            "Type": "Choice",
            "Choices": [
                {
                    "Variable": "$.ffOutput.enable_sast",
                    "BooleanEquals": true,
                    "Next": "Prepare Data"
                }
            ],
            "Default": "Success"
        },
        "Prepare Data": {
            "Type": "Pass",
            "Result": {
                "CoolList": [1, 2, 3, 4]
            },
            "ResultPath": "$.ListOut",
            "Next": "Print Iterator"
        },
        "Print Iterator": {
            "Type": "Map",
            "ItemsPath": "$.ListOut.CoolList",
            "ItemSelector": {
                "debugData.$": "$$.Map.Item.Value"
            },
            "ItemProcessor": {
                "ProcessorConfig": {
                    "Mode": "INLINE"
                },
                "StartAt": "Debug Task",
                "States": {
                    "Debug Task": {
                        "Type": "Task",
                        "Debug": true,
                        "Resource": "MyCode",
                        "OutputPath": "$.Payload",
                        "Parameters": {
                            "Payload.$": "$"
                        },
                        "End": true
                    }
                }
            },
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "Fail"
                }
            ],
            "Next": "Mock Step"
        },
        "Mock Step": {
            "Type": "Task",
            "Next": "Success",
            "Mock": true,
            "Resource": "MockOutput"
        },
        "Fail": {
            "Type": "Fail",
            "End": true
        },
        "Success": {
            "Type": "Succeed",
            "End": true
        }
    }
}
